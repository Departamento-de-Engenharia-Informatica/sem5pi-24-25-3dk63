name: Backend CI/CD

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

defaults:
  run:
    working-directory: Backend/

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Install dependencies
        run: |
          dotnet restore DDDNetCore.csproj
          echo "Dependencies restored" >> deploy-log.txt

      - name: Build
        run: |
          dotnet build DDDNetCore.csproj -c Release -o ./dist
          echo "Build completed" >> deploy-log.txt

      - name: Test
        run: |
          dotnet test DDDNetCore.csproj
          echo "Tests completed" >> deploy-log.txt

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: Backend/dist

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn
          echo "OpenVPN installed" >> deploy-log.txt

      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v2
        with:
          config_file: .github/workflows/deinet.ovpn
          username: ${{ secrets.VPN_USERNAME }}
          password: ${{ secrets.VPN_PASSWORD }}

      - name: Check VPN connection
        run: echo "VPN connection established" >> deploy-log.txt

      - name: Create target directory
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "mkdir -p ~/deploy-Backend"
          echo "Target directory created" >> deploy-log.txt

      - name: Copy Files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "Backend/*"
          target: "~/deploy-Backend"
          rm: true

      - name: Deploy Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/deploy-Backend/Backend
            dotnet tool restore
            export ASPNETCORE_ENVIRONMENT="Production" ASPNETCORE_URLS="https://localhost:5001"
            dotnet ef database update
            killall -9 DDDNetCore
            nohup ./dist/DDDNetCore > /dev/null 2>&1 &
            echo "Deployment completed" >> deploy-log.txt

      - name: Upload Logs
        uses: actions/upload-artifact@v3
        with:
          name: deploy-logs
          path: deploy-log.txt
