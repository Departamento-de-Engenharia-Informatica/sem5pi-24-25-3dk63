name: Backend CI/CD

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

defaults:
  run:
    working-directory: Backend/

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Install dependencies
        run: dotnet restore DDDNetCore.csproj

      - name: Build
        run: dotnet build DDDNetCore.csproj -c Release -o ./dist

      - name: Test
        run: dotnet test DDDNetCore.csproj

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: Backend/dist

      - name: Setup SSH directory
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create target directory
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/deploy-Backend"

      - name: Copy Files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          source: "Backend/*"
          target: "~/deploy-Backend"
          rm: true
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/deploy-Backend/Backend
            dotnet tool restore
            export ASPNETCORE_ENVIRONMENT="Production" ASPNETCORE_URLS="https://localhost:5001"
            dotnet ef database update
            killall -9 DDDNetCore
            nohup ./dist/DDDNetCore > /dev/null 2>&1 &
          key: ${{ secrets.SSH_PRIVATE_KEY }}
